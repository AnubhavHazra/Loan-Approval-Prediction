%pip install pandas scikit-learn matplotlib
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt

# Load the dataset
df = pd.read_csv("loan_approval_dataset.csv")

# Display first few rows
print("First few rows of data:\n", df.head())

# Rename columns for clarity (optional but useful)
df.columns = ['dependents', 'education', 'self_employed', 'income',
    'loan_amount', 'loan_term', 'cibil_score',
    'residential_assets', 'commercial_assets', 'luxury_assets',
    'bank_assets', 'loan_status']

# Encode categorical variables
label_encoders = {}
for col in ['education', 'self_employed', 'loan_status']:
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col])
    label_encoders[col] = le  # save encoder if needed later

# Split features and target
X = df.drop('loan_status', axis=1)
y = df['loan_status']

# Normalize features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Train/test split
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Try different values of k and find best accuracy
accuracy_scores = []
k_range = range(1, 21)  # trying k from 1 to 20

for k in k_range:
    knn = KNeighborsClassifier(n_neighbors=k)
    knn.fit(X_train, y_train)
    y_pred = knn.predict(X_test)
    acc = accuracy_score(y_test, y_pred)
    accuracy_scores.append(acc)

# Best k
best_k = k_range[np.argmax(accuracy_scores)]
best_accuracy = max(accuracy_scores)

print(f"\nBest value of k: {best_k}")
print(f"Accuracy with k={best_k}: {best_accuracy:.4f}")

# Plot accuracy vs. k
plt.figure(figsize=(10, 6))
plt.plot(k_range, accuracy_scores, marker='o')
plt.xlabel('Number of Neighbors (k)')
plt.ylabel('Accuracy on Test Set')
plt.title('KNN Accuracy for Different k')
plt.grid(True)
plt.show()